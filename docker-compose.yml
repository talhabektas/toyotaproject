version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - finansal_network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "finansal.rates:1:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper
    networks:
      - finansal_network

  redis:
    image: redis:7.0-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - finansal_network

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: finansal_rates
    ports:
      - "5432:5432"
    networks:
      - finansal_network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  opensearch:
    image: opensearchproject/opensearch:2.4.0
    container_name: opensearch
    environment:
      - discovery.type=single-node
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
      - "DISABLE_SECURITY_PLUGIN=true"
    ports:
      - "9200:9200"
    networks:
      - finansal_network

  tcp-simulator:
    build:
      context: ./demo
    container_name: tcp-simulator
    ports:
      - "8081:8081"
    networks:
      - finansal_network
    depends_on:
      - kafka

  rest-simulator:
    build:
      context: ./platform-simulator-rest
    container_name: rest-simulator
    ports:
      - "8080:8080"
    networks:
      - finansal_network
    depends_on:
      - kafka

  main-app:
    build:
      context: ./main-app
    container_name: main-app
    ports:
      - "8090:8090"
    environment:
      - TCP_PLATFORM_HOST=tcp-simulator
      - TCP_PLATFORM_PORT=8081
      - REST_PLATFORM_HOST=rest-simulator
      - REST_PLATFORM_PORT=8080
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - KAFKA_TOPIC_RATES=finansal.rates
      - SPRING_MAIN_ALLOW_CIRCULAR_REFERENCES=true
      - SPRING_MAIN_ALLOW_BEAN_DEFINITION_OVERRIDING=true
    networks:
      - finansal_network
    depends_on:
      - tcp-simulator
      - rest-simulator
      - redis
      - kafka
    restart: on-failure

  kafka-consumer:
    build:
      context: ./Kafka-Consumer
    container_name: kafka-consumer
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/finansal_rates
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - KAFKA_TOPIC_RATES=finansal.rates
      - SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE=10
      - SPRING_MAIN_ALLOW_CIRCULAR_REFERENCES=true
      - SPRING_MAIN_ALLOW_BEAN_DEFINITION_OVERRIDING=true
    networks:
      - finansal_network
    depends_on:
      - kafka
      - postgres
    restart: on-failure

  kafka-consumer-opensearch:
    build:
      context: ./kafka-consumer-opensearch
    container_name: kafka-consumer-opensearch
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - KAFKA_TOPIC_RATES=finansal.rates
      - OPENSEARCH_URL=http://opensearch:9200
      - SPRING_MAIN_ALLOW_CIRCULAR_REFERENCES=true
      - SPRING_MAIN_ALLOW_BEAN_DEFINITION_OVERRIDING=true
    networks:
      - finansal_network
    depends_on:
      - kafka
      - opensearch
    restart: on-failure

networks:
  finansal_network:
    driver: bridge

volumes:
  postgres-data: